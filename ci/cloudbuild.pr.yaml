
steps:
- id: Build Docker Image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg','GPU_TARGET=${_GPU_TARGET}',
         '--build-arg','HIP_PLATFORM=${_HIP_PLATFORM}',
         '--build-arg','PREC=${_PREC}',
         '-f',
         'docker/nvidia/Dockerfile',
         '.',
         '-t',
         'self:pr']

- id: Run Tests (Serial)
  name: 'self:pr'
  secretEnv: ['CODECOV_TOKEN']
  args: 
  - '-c'
  - | 

      source /etc/profile.d/z10_spack_environment.sh

      for file in $(ls /opt/self/examples/*); do
        echo $file
        $file
      done

      for file in $(ls /build/src/*.gcno); do
        dest=$(echo $file | sed 's/\.f//g')
        echo "$file -> $dest"
        cp $file $dest
      done

      for file in $(ls /build/src/*.gcda); do
        dest=$(echo $file | sed 's/\.f//g')
        echo "$file -> $dest"
        cp $file $dest
      done

      for file in $(ls /build/examples/*.gcno); do
        dest=$(echo $file | sed 's/\.f90//g')
        echo "$file -> $dest"
        cp $file $dest
      done

      for file in $(ls /build/examples/*.gcda); do
        dest=$(echo $file | sed 's/\.f90//g')
        echo "$file -> $dest"
        cp $file $dest
      done

      gcovr -x -o coverage.xml \
            -r /build 

      rm /build/src/*.gcov
      rm /build/examples/*.gcov

      curl -Os https://uploader.codecov.io/latest/linux/codecov
      chmod +x codecov
      ./codecov -t $$CODECOV_TOKEN \
                -R /build/ \
                --sha ${COMMIT_SHA} \
                --branch ${BRANCH_NAME} \
                --pr ${_PR_NUMBER}


options:
  diskSizeGb: 100

timeout: 3600s

availableSecrets:
  secretManager:
    - versionName: projects/self-fluids/secrets/codecov-token/versions/1
      env: 'CODECOV_TOKEN'

substitutions:
  _PREC: 'single'
  _GPU_TARGET: 'sm_72'
  _HIP_PLATFORM: 'nvidia'


