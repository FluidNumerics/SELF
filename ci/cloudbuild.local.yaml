
steps:
- id: Build Docker Image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg','GPU_TARGET=${_GPU_TARGET}',
         '--build-arg','HIP_PLATFORM=${_HIP_PLATFORM}',
         '--build-arg','PREC=${_PREC}',
         '-f',
         'docker/nvidia/Dockerfile',
         '.',
         '-t',
         'gcr.io/${PROJECT_ID}/self:dev-${_PREC}-${_GPU_TARGET}']


- id: Run Tests (Serial)
  name: 'gcr.io/${PROJECT_ID}/self:dev-${_PREC}-${_GPU_TARGET}'
  args: 
  - '-c'
  - | 

      source /etc/profile.d/z10_spack_environment.sh

      for file in $(ls /opt/self/examples/*); do
        echo $file
        $file
      done

      mv /opt/self/obj/*.gcno src/
      mv /workspace/build/obj/*.gcda src/


- id: Create coverage report
  name: 'jenswet/gcc-cmake-gcovr:latest'
  secretEnv: ['CODECOV_TOKEN']
  entrypoint: '/bin/bash'
  args: 
  - '-c'
  - | 

      for file in $(ls src/*.gcno); do
        dest=$(echo $file | sed 's/\.f//g')
        echo "$file -> $dest"
        cp $file $dest
      done

      for file in $(ls src/*.gcda); do
        dest=$(echo $file | sed 's/\.f//g')
        echo "$file -> $dest"
        cp $file $dest
      done

      mv /workspace/*.gcda examples/

      for file in "src/*.f90"; do
        gcov $file
      done

      for file in "examples/*.f90"; do
        gcov $file
      done

      gcovr --exclude-directories ./docker \
            --exclude-directories ./ci \
            --exclude-directories ./env \
            --exclude-directories ./etc \
            --exclude-directories ./docs \
            --exclude-directories ./tf \
            -r . 

      rm src/*.gcov
      rm examples/*.gcov


timeout: 3600s

substitutions:
  _PREC: 'double'
  _GPU_TARGET: 'sm_72'
  _HIP_PLATFORM: 'nvidia'


