
steps:
        # Add a step for formatting requirements

        - id: Build Docker Image
          name: 'gcr.io/cloud-builders/docker'
          args: ['build',
                 '--build-arg','BUILD_TYPE=${_BUILD_TYPE}',
                 '--build-arg','GPU_TARGET=${_SELF_GPU_TARGET}',
                 '-f','docker/Dockerfile.${_PLATFORM}',
                 '.',
                 '-t',
                 'gcr.io/self-fluids/self_${_PLATFORM}:${SHORT_SHA}'
          ]

        - id: Build Singularity Image
          name: 'quay.io/singularity/singularity:v3.7.1'
          args: ['build',
                 'self_${_PLATFORM}.sif',
                 'docker-daemon://gcr.io/self-fluids/self_${_PLATFORM}:${SHORT_SHA}']
          waitFor: ["Build Docker Image"]

        # Create CI Infrastructure
        - id: Provision Test Cluster
          name: 'hashicorp/terraform:0.12.26'
          entrypoint: 'sh'
          args: 
          - '-c'
          - | 
              cd tf/gce
              cp fluid.tfvars.tmpl fluid.auto.tfvars
              sed -i "s/<sha>/${SHORT_SHA}/g" fluid.auto.tfvars
              sed -i "s/<project>/${PROJECT_ID}/g" fluid.auto.tfvars
              sed -i "s/<zone>/${_SELF_ZONE}/g" fluid.auto.tfvars
              sed -i "s/<machine_type>/${_SELF_MACHINE_TYPE}/g" fluid.auto.tfvars
              sed -i "s/<node_count>/${_SELF_NODE_COUNT}/g" fluid.auto.tfvars
              sed -i "s#<image>#${_SELF_IMAGE}#g" fluid.auto.tfvars
              sed -i "s/<gpu_type>/${_SELF_GPU_TYPE}/g" fluid.auto.tfvars
              sed -i "s/<gpu_count>/${_SELF_GPU_COUNT}/g" fluid.auto.tfvars
              sed -i "s#<vpc_subnet>#${_SELF_VPC_SUBNET}#g" fluid.auto.tfvars
              sed -i "s/<tags>/${_SELF_TAGS}/g" fluid.auto.tfvars
              sed -i "s/<service_account>/${_SELF_SERVICE_ACCOUNT}/g" fluid.auto.tfvars
              terraform init
              terraform plan
              terraform apply --auto-approve
          waitFor: ["Build Singularity Image"]

        - id: Create SSH Key for Service Account
          name: gcr.io/cloud-builders/gcloud
          entrypoint: "/bin/bash"
          args: 
          - '-c'
          - | 
              ssh-keygen -b 2048 -t rsa -f /workspace/sshkey -q -N ""
              sleep 30
              gcloud compute ssh self${SHORT_SHA}-0 --zone=${_SELF_ZONE} \
                                                  --ssh-key-file=/workspace/sshkey \
                                                  --command="singularity --version"
          waitFor: ["Provision Test Cluster"]

        # Copy Singularity image up to CI infrastructure
        - id: Copy Singularity Image to GCE Cluster
          name: gcr.io/cloud-builders/gcloud
          args: 
          - compute 
          - scp 
          - self_${_PLATFORM}.sif 
          - self${SHORT_SHA}-0:/tmp/self_${_PLATFORM}.sif 
          - --zone=${_SELF_ZONE}
          - --ssh-key-file=/workspace/sshkey
          waitFor: ["Create SSH Key for Service Account"]

        # Launch CI job on head node
        - id: Run CI Tests
          name: gcr.io/cloud-builders/gcloud
          entrypoint: /bin/bash
          args: 
          - '-c'
          - | 
            sleep 10
            gcloud compute ssh self${SHORT_SHA}-0 \
              --command="singularity exec ${_SELF_SINGULARITY_GPUFLAG} --bind /workspace:/workspace /tmp/self_${_PLATFORM}.sif python3 /opt/self/test/ciRun.py || exit 0" \
              --zone=${_SELF_ZONE} \
              --ssh-key-file=/workspace/sshkey
          waitFor: ["Copy Singularity Image to GCE Cluster"]
          
        # Copy Artifacts back from CI infrastructure
        - id: Copy Artifacts from Cluster
          name: gcr.io/cloud-builders/gcloud
          args: 
          - compute 
          - scp 
          - --recurse
          - self${SHORT_SHA}-0:/workspace/*
          - /workspace/ 
          - --zone=${_SELF_ZONE}
          - --ssh-key-file=/workspace/sshkey
          waitFor: ["Run CI Tests"]

        # Delete CI Infrastructure
        - id: Delete Test Cluster
          name: 'hashicorp/terraform:0.12.26'
          entrypoint: 'sh'
          args: 
          - '-c'
          - | 
              cd tf/gce
              terraform destroy --auto-approve
          waitFor: ["Copy Artifacts from Cluster"]

# Check for zero exit codes

# Check for correctness
  


images: ['gcr.io/self-fluids/self_${_PLATFORM}:${SHORT_SHA}']

artifacts:
  objects:
    location: 'gs://self-fluids-singularity/${SHORT_SHA}'
    paths: ['self_${_PLATFORM}.sif']

timeout: 9600s

substitutions:
        _BUILD_TYPE: 'dev'
        _PLATFORM: 'serial-x86'
        _SELF_NAME: 'self'
        _SELF_ZONE: 'us-west1-b'
        _SELF_MACHINE_TYPE: 'n1-standard-2'
        _SELF_NODE_COUNT: '1'
        _SELF_IMAGE: 'projects/hpc-apps/global/images/singularity-fluid-gcp-latest'
        _SELF_GPU_TYPE: 'nvidia-tesla-v100'
        _SELF_GPU_TARGET: 'sm_72'
        _SELF_GPU_COUNT: '0'
        _SELF_VPC_SUBNET: ''
        _SELF_SINGULARITY_GPUFLAG: ''
        _SELF_SERVICE_ACCOUNT: ''
        _SELF_TAGS: 'self-ci'
