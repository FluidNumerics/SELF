
steps:
- id: Build Image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build',
         '--build-arg','GPU_TARGET=${_GPU_TARGET}',
         '--build-arg','BUILD_TYPE=Coverage',
         '-f',
         'docker/${_OS}/rocm-${_ROCM_VERSION}/${_HIP_PLATFORM}/Dockerfile',
         '.',
         '-t',
         'us-docker.pkg.dev/${PROJECT_ID}/self/${_OS}-rocm-${_ROCM_VERSION}_${_GPU_TARGET}:${SHORT_SHA}']

- id: Run CTests with coverage
  name: 'us-docker.pkg.dev/${PROJECT_ID}/self/${_OS}-rocm-${_ROCM_VERSION}_${_GPU_TARGET}:dev'
  entrypoint: '/bin/bash'
  args: 
  - '-c'
  - |
      apt-get update -y && apt-get install -y lcov

      cd /self

      lcov --no-external \
          --capture \
          --initial \
          --directory . \
          --exclude '*/test/*' \
          --output-file /workspace/lcov_base.info

      # Load dependency packages
      . /etc/profile.d/z10_spack_environment.sh

      # Run the tests
      ctest --test-dir /self/test

      lcov --no-external \
           --capture \
           --directory . \
           --exclude '*/test/*' \
           --output-file /workspace/lcov_ctest.info

- id: Download input decks for integration tests
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  entrypoint: 'gsutil'
  args: ['cp', '-r',
         'gs://self-fluids-data/input_decks/mesh',
         '/workspace/']

- id: Run Integration Tests with coverage
  name: 'us-docker.pkg.dev/${PROJECT_ID}/self/${_OS}-rocm-${_ROCM_VERSION}_${_GPU_TARGET}:${SHORT_SHA}'
  entrypoint: '/bin/bash'
  args: 
  - '-c'
  - |
      apt-get update -y && apt-get install -y lcov

      cd /self

      # Load dependency packages
      . /etc/profile.d/z10_spack_environment.sh

      for example in $(find ./examples/ -mindepth 2 -type d); do
          echo $example
          /opt/self/bin/self -i ${example}/input.json || exit 1
      done

      # Capture coverage for integration tests
      lcov --no-external \
           --capture \
           --directory . \
           --exclude '*/test/*' \
           --output-file /workspace/lcov_itest.info

      lcov --add-tracefile /workspace/lcov_base.info \
           --add-tracefile /workspace/lcov_ctest.info \
           --add-tracefile /workspace/lcov_itest.info \
           --output-file /workspace/lcov.info

      rm /workspace/lcov_*.info

- id: Upload coverage to codecov
  name: gcr.io/cloud-builders/git
  secretEnv: ['CODECOV_TOKEN']
  entrypoint: "/bin/bash"
  args: 
  - "-c"
  - |
     export DEBIAN_FRONTEND=noninteractive 
     apt-get update -y && apt-get install -y wget
     wget --no-check-certificate https://github.com/codecov/uploader/releases/download/v0.3.2/codecov-linux
     chmod +x ./codecov-linux
     ./codecov-linux -t "$$CODECOV_TOKEN" \
                            --sha "${COMMIT_SHA}" \
                            --branch "${BRANCH_NAME}" \
                            --pr "${_PR_NUMBER}"


images:
- 'us-docker.pkg.dev/${PROJECT_ID}/self/${_OS}-rocm-${_ROCM_VERSION}_${_GPU_TARGET}:${SHORT_SHA}'

# options:
#   diskSizeGb: 100
#   machineType: 'E2_HIGHCPU_32'

timeout: 720s

availableSecrets:
  secretManager:
    - versionName: projects/fluidnumerics-self/secrets/CODECOV_TOKEN/versions/1
      env: 'CODECOV_TOKEN'

substitutions:
  _GPU_TARGET: 'gfx90a'
  _HIP_PLATFORM: 'amd'
  _ROCM_VERSION: '5.7'
  _OS: 'ubuntu2204'
