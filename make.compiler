# Compiler

HIPFORT ?= hipfc
FC ?= gfortran
HIPFORT_GPU ?= gfx900
ROCM_DIR ?= /opt/rocm
CUDA_PATH ?= /usr/local/cuda
PREC ?= single
SELF_FFLAGS ?= -cpp -g -O3 -C -Wall -fbounds-check -fbacktrace --coverage -ffpe-trap=invalid,zero,overflow


ifeq ($(PREC),double)
  SELF_FFLAGS += -DDOUBLE_PRECISION
  SELF_CXXFLAGS += -DDOUBLE_PRECISION
endif

 
CXX = $(HIPFORT) 
AR = gcc-ar
SELF_FFLAGS += -hipfort-compiler $(FC) -rocm-path $(ROCM_DIR) --offload-arch=$(GPU_TARGET)
SELF_CXXFLAGS += -hipfort-compiler $(FC) -rocm-path $(ROCM_DIR) --offload-arch=$(GPU_TARGET)

#  ifeq ($(findstring gfx, $(OFFLOAD_ARCH)), gfx)
#    SELF_SELF_FFLAGS += -hipfort-compiler $(FC) -rocm-path $(ROCM_DIR) --offload-arch=$(GPU_TARGET)
#    SELF_SELF_CXXFLAGS += -hipfort-compiler $(FC) -rocm-path $(ROCM_DIR) --offload-arch=$(GPU_TARGET)
#  else ifeq ($(findstring sm, $(OFFLOAD_ARCH)), sm)
#    SELF_SELF_FFLAGS += -hipfort-compiler $(FC) -rocm-path $(ROCM_DIR) --offload-arch=$(GPU_TARGET)
#    SELF_SELF_CXXFLAGS += --gpu-architecture $(GPU_TARGET)
#  endif

$(info HIPFORT : $(HIPFORT))
$(info Fortran Compiler : $(FC))
$(GPU Target : $(HIPFORT_GPU))
