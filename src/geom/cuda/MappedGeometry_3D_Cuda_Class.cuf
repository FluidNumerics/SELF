! MappedGeometry_3D_Cuda_Class.f90
! 
! Copyright 2017 Joseph Schoonover <joe@fluidnumerics.consulting>, Fluid Numerics LLC
! All rights reserved.
!
! //////////////////////////////////////////////////////////////////////////////////////////////// !

MODULE MappedGeometry_3D_Cuda_Class

! src/common/
USE ModelPrecision
! src/geom/
USE MappedGeometry_3D_Class

IMPLICIT NONE


   TYPE MappedGeometry_3D_Cuda

      
      REAL(prec), ALLOCATABLE, DEVICE :: nHat_dev(:,:,:,:,:) 
      REAL(prec), ALLOCATABLE, DEVICE :: xBound_dev(:,:,:,:,:) 
      REAL(prec), ALLOCATABLE, DEVICE :: x_dev(:,:,:,:)
      REAL(prec), ALLOCATABLE, DEVICE :: J_dev(:,:,:,:)    
      REAL(prec), ALLOCATABLE, DEVICE :: Ja_dev(:,:,:,:,:,:)

      CONTAINS

      PROCEDURE :: Build      => Build_MappedGeometry_3D_Cuda
      PROCEDURE :: Trash      => Trash_MappedGeometry_3D_Cuda
      
      PROCEDURE :: UpdateDevice => UpdateDevice_MappedGeometry_3D_Cuda

   END TYPE MappedGeometry_3D_Cuda


 CONTAINS
!
!
!==================================================================================================!
!------------------------------- Manual Constructors/Destructors ----------------------------------!
!==================================================================================================!
!
!
 ATTRIBUTES(Host) SUBROUTINE Build_MappedGeometry_3D_Cuda( myGeom, N, nElems )

  IMPLICIT NONE
  CLASS(MappedGeometry_3D_Cuda), INTENT(out) :: myGeom
  INTEGER, INTENT(in)                        :: N, nElems

      ALLOCATE( myGeom % Ja_dev(0:N,0:N,0:N,1:3,1:3,1:nElems), &
                myGeom % J_dev(0:N,0:N,0:N,1:nElems), &
                myGeom % x_dev(0:N,0:N,0:N,1:nElems), &
                myGeom % xBound_dev(1:3,0:N,0:N,1:6,1:nElems), & 
                myGeom % nHat_dev(1:3,0:N,0:N,1:6,1:nElems) )
      
      myGeom % Ja_dev      = 0.0_prec
      myGeom % J_dev       = 0.0_prec
      myGeom % x_dev       = 0.0_prec
      myGeom % xBound_dev  = 0.0_prec
      myGeom % nHat_dev    = 0.0_prec

 END SUBROUTINE Build_MappedGeometry_3D_Cuda
!
 ATTRIBUTES(Host) SUBROUTINE Trash_MappedGeometry_3D_Cuda( myGeom )

   IMPLICIT NONE
   CLASS(MappedGeometry_3D_Cuda), INTENT(inout)  :: myGeom

      
      DEALLOCATE( myGeom % Ja_dev, myGeom % J_dev, myGeom % x_dev, &
                  myGeom % xBound_dev, myGeom % nHat_dev)
 
 END SUBROUTINE Trash_MappedGeometry_3D_Cuda
!
!
!==================================================================================================!
!--------------------------------- Type Specific Routines -----------------------------------------!
!==================================================================================================!
!
!
 ATTRIBUTES(Host) SUBROUTINE UpdateDevice_MappedGeometry_3D_Cuda( myGeom, cpuGeomArray, N, nElems )
 
   IMPLICIT NONE
   CLASS( MappedGeometry_3D_Cuda ), INTENT(inout) :: myGeom
   INTEGER, INTENT(in)                            :: N, nElems
   TYPE( MappedGeometry_3D ), INTENT(in)          :: cpuGeomArray(1:nElems)
   ! Local
   INTEGER :: i, j, iEl
   REAL(prec) :: Jac(0:N,0:N,0:N,1:nElems)
   REAL(prec) :: nHat(1:3,0:N,0:N,1:6,1:nElems)
   REAL(prec) :: xBound(1:3,0:N,0:N,1:6,1:nElems)
   REAL(prec) :: Ja(0:N,0:N,0:N,1:3,1:3,1:nElems)

      DO iEl = 1, nElems
	     Jac(:,:,:,iEl)      = cpuGeomArray(iEl) % J
	     nHat(:,:,:,:,iEl)   = cpuGeomArray(iEl) % nHat
	     xBound(1,:,:,:,iEl) = cpuGeomArray(iEl) % xbound
	     xBound(2,:,:,:,iEl) = cpuGeomArray(iEl) % ybound
	     xBound(3,:,:,:,iEl) = cpuGeomArray(iEl) % zbound
        Ja(:,:,:,:,:,iEl)   = cpuGeomArray(iEl) % Ja
	   ENDDO
      
      myGeom % J_dev      = Jac
      myGeom % nHat_dev   = nHat
      myGeom % xBound_dev = xBound
      myGeom % Ja_dev     = Ja
      
   END SUBROUTINE UpdateDevice_MappedGeometry_3D_Cuda
!
END MODULE MappedGeometry_3D_Cuda_Class
